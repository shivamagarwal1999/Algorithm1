class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class LinkedList:
    def __init__(self):
        self.head=None
    def push(self,new_data):
        new_node=Node(new_data)
        if self.head is None:
            self.head=new_node
            return
        last=self.head
        while last.next:
            last=last.next
        last.next=new_node
    '''def deletenode(self,key):
        temp=self.head
        if temp is not None:
            if temp.data==key:
                self.head=temp.next
                temp=None
                return
        while temp is not None:
            if temp.data==key:
                break
            prev=temp
            temp=temp.next
        if temp==None:
            return
        prev.next=temp.next
        temp=None'''
    def add2linkedlist(self,first,second):
        prev=None
        temp=None
        carry=0
        while(first is not None or second is not None):
            fdata=0 if first is None else first.data
            sdata=0 if second is None else second.data
            sum = carry + fdata + sdata
            carry=1 if sum>9 else 0
            sum= sum if sum<10 else sum%10
            temp=Node(sum)
            if self.head is None:
                self.head=temp
            else:
                prev.next=temp
            prev=temp
            if first is not None:
                first=first.next
            if second is not None:
                second=second.next
        if carry>0:
            temp.next=Node(carry)
    def printlist(self):
        temp=self.head
        while (temp is not None):
            print(temp.data , "-->",end=" ")
            temp=temp.next
        print("NULL")
if __name__=='__main__':
    first=LinkedList()
    second=LinkedList()
    result=LinkedList()
    for i in range(10):
        first.push(i)
        second.push(i)
    first.printlist()
    second.printlist()
    result.add2linkedlist(first.head,second.head)
    result.printlist()
